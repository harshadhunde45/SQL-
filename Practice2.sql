use mavenmovies;

##Question 1:
/*Retrieve the total number of rentals made in the Sakila database.
Hint: Use the COUNT() function.*/

select count(rental_id)as total_rental from rental ;
select *from rental;

##Question 2:
/*Find the average rental duration (in days) of movies rented from the Sakila database.
Hint: Utilize the AVG() function.
Also ensures that only completed rentals should be considered in the average calculation.*/

select avg(datediff(return_date ,rental_date))as rental_duration from rental; 

##Question 3:
/*Display the first name and last name of customers in uppercase.
Hint: Use the UPPER () function.*/

select upper(concat(first_name, ' ',last_name))as full_name from customer ;

##Question 4:
/*Extract the month from the rental date and display it along side the rental ID.
Hint: Employ the MONTH() function.*/

select rental_id,rental_date, month(return_date)as rental_month ,year(return_date)as rental_year,day(return_date)as rental_day from rental ;
select count(rental_id) from rental where year(rental_date)=2005 and month(rental_date)=8 and day(rental_date)=21;

##Question 5:
/*Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
Hint: Use COUNT () in conjunction with GROUP BY.*/

select count(rentals) from customer ;

##Question 6:
/*Find the total revenue generated by each store.
Hint: Combine SUM() and GROUP BY.*/

select s.store_id ,sum(p.amount) 
from store s
inner join payment p on s.manager_staff_id=p.staff_id 
group by  s.store_id ; 
select * from store;

##Question 7:a
/*Display the title of the movie, customer s first name, and last name who rented it.
Hint: Use JOIN between the film, inventory, rental, and customer tables.
GROUP BY:*/

Joins:

movie , customer ,rental 
select * from film;
select * from customer;
select * from rental;
select * from inventory;

select 
f.title,
c.first_name , 
c.last_name
from customer c 
inner join rental r on c.customer_id=r.customer_id
inner join  inventory i on r.inventory_id=i.inventory_id
inner join film f on i.film_id=f.film_id;

select 
f.title ,
concat(c.first_name," " ,c.last_name)as full_name 
from inventory i 
inner join film f on f.film_id=i.film_id
inner join rental r on r.inventory_id=i.inventory_id 
inner join customer c on c.customer_id=r.customer_id
order by full_name ;

## execution: inventory ,film ,rental ,customer 

select * from film;
select * from inventory;
select * from rental;
select * from customer;

# own logic 
SELECT f.title, c.first_name, c.last_name
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
JOIN customer c ON r.customer_id = c.customer_id;


##Question 8:
Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
Hint: Use JOIN between the film actor, film, and actor tables.
select *from film_actor;
select * from film;
select * from actor;

#own
select  
a.first_name,
f.title
from film f 
join film_actor fa on f.film_id= fa.film_id
join actor a on a.actor_id= fa.actor_id
where f.title="ACE GOLDFINGER";


##Question 9:
/*Determine the total number of rentals for each category of movies.
Hint: JOIN film_category, film, and rental tables, then use cOUNT () and GROUP BY.*/

select * from film_category;
select * from film;
select * from rental;

SELECT fc.category_id, COUNT(*) AS total_rentals
FROM film_category fc
JOIN film f ON fc.film_id = f.film_id
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY fc.category_id;

select        
##Question 10:
/*Find the average rental rate of movies in each language.
Hint: JOIN film and language tables, then use AVG () and GROUP BY.*/

select * from language;
select * from rental;
select * from inventory;
select * from film;
desc language;
desc film;
##
select
l.name ,
avg(f.rental_rate)as avg_rental_rate
from 
language l 
inner join film f on l.language_id= f.language_id
Group by l.name ;

##Question 11:
/*Retrieve the customer names along with the total amount they have spent on rentals.
Hint: JOIN customer, payment, and rental tables, then use SUM() and GROUP BY.*/

select * from customer;
select * from rental;
select * from payment;

select 
c.customer_id,
concat(c.first_name," " ,c.last_name) as full_name,
sum(p.amount)as total_amount
from 
customer c 
inner join payment p on c.customer_id=p.customer_id
GROUP BY c.customer_id ,c.first_name," " ,c.last_name ;


##Question 12:
/*List the titles of movies rented by each customer in a particular city (e.g., 'London').*/

select * from film;
select * from customer;
select * from city;
select * from country;
select * from address;
select * from rental;
select * from inventory;
select * from staff;
select * from store;
desc address;
desc staff;
desc store;
desc coucntry;
desc city;
desc address ;
desc rental;
desc customer;
desc inventory;

select *
from country cu
inner join  city c on cu.country_id= c.country_id
inner join address a on c.city_id= a.city_id
inner join staff s on a.address_id = s.address_id
inner join store so on s.store_id = so.store_id
inner join film f on f.film_id= i.film_id
inner join inventory i on i.inventory_id= r.inventory_id
inner join customer cs ON cs.customer_id = r.customer_id
where c.city ="london";
 
#new
select 
f.title,
concat(c.first_name, " " ,c.last_name)as customer_name,
ct.city 
from customer c
inner join rental r on c.customer_id=r.customer_id
inner join inventory i on r.inventory_id= i.inventory_id
inner join film f on i.film_id= f.film_id
inner join address a on c.address_id= a.address_id
inner join city ct on a.city_id=ct.city_id
where city="london";

##Question 13:
/*Display the top 5 rented movies along with the number of times they have been rented.*/

select * from film;
select * from rental;
select * from inventory;
select * from payment;

SELECT 
f.title,
COUNT(*) AS total_rentals
FROM film f
JOIN film fc ON fc.film_id = f.film_id
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY 
f.title
ORDER BY 
total_rentals DESC LIMIT 5;

##version 1
select 
f.title,
count(r.rental_id)as total_rental_count
from film f
inner join inventory i on f.film_id=i.film_id
inner join rental r on i.inventory_id=r.inventory_id
inner join payment p on r.rental_id=p.rental_id
group by f.title
order by total_rental_count desc
 limit 5;

#version 2

select 
f.title,
count(p.rental_id)as total_rental_count
from film f
inner join inventory i on f.film_id=i.film_id
inner join rental r on i.inventory_id=r.inventory_id
inner join payment p on r.rental_id=p.rental_id
group by f.title
order by total_rental_count desc
 limit 5;

##Question 14:
/*Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).*/

select * from customer;
select * from rental;
select * from store;
desc store;

select 
c.customer_id,
count (*)as total_rental,
s.store_id
from store s
inner join customer c on s.store_id=c.store_id
inner join rental r on c.customer_id= r.customer_id
group by c.customer_id
where s.store_id in (1,2)
group by c.customer_id
having count (distnict s.store_id =1,2); 














